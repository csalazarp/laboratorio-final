name: Script DevSecOps USACH

on:
  push:
    branches: [ master ]

jobs:
  SAST:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: SonarCloud Scan
        uses: sonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=devsecops-usach
            -Dsonar.projectKey=devsecops-usach_laboratorio-final
            -Dsonar.branch.name=master


      - name: Revision de resultado de SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          echo "Validando el estado del Quality Gate..."
          analysisId=$(curl -s -u "$SONAR_TOKEN:" \
            "https://sonarcloud.io/api/ce/component?component=$REPO_NAME" | jq -r '.current.analysisId')

          echo "Analysis ID: $analysisId"

          qualityGateStatus=$(curl -s -u "$SONAR_TOKEN:" \
            "https://sonarcloud.io/api/qualitygates/project_status?analysisId=$analysisId" | jq -r '.projectStatus.status')

          # if [ "$qualityGateStatus" != "OK" ]; then

          vulnerabilities=$(curl -s -u "$SONAR_TOKEN:" \
            "https://sonarcloud.io/api/issues/search?componentKeys=$REPO_NAME&resolved=false&type=VULNERABILITY&impactSeverities=MEDIUM,HIGH,BLOCKER" | jq  '.total')

          if [ "$vulnerabilities" -gt 0 ]; then
            echo "Se encontraron $vulnerabilities vulnerabilidades críticas. El proyecto no cumple con los estándares de seguridad."
            # exit 1
          else
            echo "El proyecto cumple con el Quality Gate y no tiene vulnerabilidades críticas. Continuando sin problemas."
          fi


  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci

        
      - name: Run npm audit
        id: npm-audit
        continue-on-error: true
        run: |
          echo "Ejecutando npm audit..."
          npm install --package-lock-only
          npm audit --json > npm-audit.json || true
          

          # Resultados

          CRITICAL=$(jq '.metadata.vulnerabilities.critical' npm-audit.json)
          HIGH=$(jq '.metadata.vulnerabilities.high' npm-audit.json)
          MODERATE=$(jq '.metadata.vulnerabilities.moderate' npm-audit.json)

          echo "Vulnerabilidades encontradas:"
          echo "Críticas: $CRITICAL"
          echo "Altas: $HIGH"
          echo "Moderadas: $MODERATE"

          if [ "$CRITICAL" -gt 0 ]; then
            echo "Se encontraron $CRITICAL vulnerabilidades críticas. El proyecto no cumple con los estándares de seguridad."
            exit 1
          elif [ "$HIGH" -gt 0 ]; then
            echo "Se encontraron $HIGH vulnerabilidades altas. El proyecto no cumple con los estándares de seguridad."
            exit 1
          elif [ "$MODERATE" -gt 0 ]; then
            echo "Se encontraron $MODERATE vulnerabilidades moderadas. El proyecto no cumple con los estándares de seguridad."
            exit 1
          else
            echo "El proyecto cumple con los estándares de seguridad."
          fi

      # Subir reportes como artefactos
      - name: Upload Security Reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            npm-audit.json

